" append local runtime
set runtimepath+=~/.vim.local
" load local plugins
runtime! plugin/*.vim

color ir_black

set showcmd
set wildmenu
set wildmode=list:longest
set wildignore=*.o,*.obj,*~
set autoindent
set hidden

set nocompatible
set modelines=0
set encoding=utf-8
set nonumber
set list
set listchars=tab:▸\ ,eol:¬

fun! GetSnipsInCurrentScope()
  let snips = {}
  for scope in [bufnr('%')] + split(&ft, '\.') + ['_']
    call extend(snips, get(s:snippets, scope, {}), 'keep')
    call extend(snips, get(s:multi_snips, scope, {}), 'keep')
  endfor
  return snips
endf

let g:acp_behaviorSnipmateLength = 1

set statusline=
set statusline+=%f\ %2*%m\ %1*%h
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%{fugitive#statusline()}
set statusline+=%*
set statusline+=%r%=[%{&encoding}\ %{&fileformat}\ %{strlen(&ft)?&ft:'none'}]\ %12.(%c:%l/%L%)
set laststatus=2

set ic

" paste
nnoremap <F2> :set invpaste paste?<CR>
imap <F2> <C-O>:set invpaste paste?<CR>
set pastetoggle=<F2>

" rvm prompt
function! RvmStatusLine()
    if ! exists('g:rvm_prompt')
        let g:rvm_prompt = system("~/.rvm/bin/rvm-prompt v g")
        let g:rvm_prompt = substitute(g:rvm_prompt, '\n', '', 'g')
    endif
    return '['.g:rvm_prompt.']'
endfunction

set statusline+=\ %{RvmStatusLine()}

let g:rdfa_attributes_complete = 0
let g:microdata_attributes_complete = 0
let g:aria_attributes_complete = 0

if exists(":Tabularize")
  nmap <Leader>a= :Tabularize /=<CR>
  vmap <Leader>a= :Tabularize /=<CR>
  nmap <Leader>a: :Tabularize /:\zs<CR>
  vmap <Leader>a: :Tabularize /:\zs<CR>
endif

inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a
 
function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

hi! link EasyMotionTarget MatchParen
let g:EasyMotion_leader_key = '_w'

map   <silent> <F6> mmgg=G'm
imap  <silent> <F6> <Esc> mmgg=G'm

map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove


"bindings for ragtag
inoremap <M-o> <Esc>o
inoremap <C-j> <Down>
let g:ragtag_global_maps = 1

"mark syntax errors with :signs
let g:syntastic_enable_signs=1

vmap <C-x> :!pbcopy<CR>
vmap <C-c> :w !pbcopy<CR><CR>
